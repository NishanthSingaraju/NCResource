{"ast":null,"code":"var _jsxFileName = \"/Users/nishanthsingaraju/nccadv/frontend/src/Map.js\",\n    _s = $RefreshSig$();\n\nimport { MapContainer, TileLayer, Marker, Circle, CircleMarker } from 'react-leaflet';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ResourceModal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction loadJSON(callback) {\n  var xobj = new XMLHttpRequest();\n  xobj.overrideMimeType(\"application/json\");\n  xobj.open('GET', '../news_data.json', true);\n\n  xobj.onreadystatechange = function () {\n    if (xobj.readyState == 4 && xobj.status == \"200\") {\n      callback(JSON.parse(xobj.responseText));\n    }\n  };\n\n  xobj.send(null);\n}\n\nconst EXAMPLE = require(\"./resource.json\");\n\nconsole.log(EXAMPLE);\nexport default function Map() {\n  _s();\n\n  const [base, setBase] = useState(null);\n  const [county, setCounty] = useState(null);\n  const [state, setState] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [element, setElement] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/map\").then(res => {\n      setBase(res.data.image);\n      setCounty(res.data.county);\n      setState(res.data.state);\n    });\n  }, []);\n\n  var onClick = element => {\n    setElement(element);\n    handleOpen();\n    console.log(open);\n  };\n\n  var handleOpen = () => {\n    setOpen(true);\n  };\n\n  var handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      style: {\n        backgroundColor: \"black\",\n        height: \"100vh\",\n        width: \"100vw\"\n      },\n      center: {\n        lat: 35.938,\n        lng: -79.81\n      },\n      zoom: 10,\n      children: [base ? /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: base\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this) : null, county ? /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: county\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this) : null, state ? /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: state,\n        d: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 14\n      }, this) : null, EXAMPLE.map((element, index) => {\n        /*#__PURE__*/\n        _jsxDEV(CircleMarker, {\n          radius: 5,\n          color: \"purple\",\n          center: element.positions,\n          eventHandlers: {\n            click: () => onClick(element)\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), element ? /*#__PURE__*/_jsxDEV(ResourceModal, {\n      element: element,\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"qC3GKDuJjXenV+vHJLth9Eh1rEI=\");\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/nishanthsingaraju/nccadv/frontend/src/Map.js"],"names":["MapContainer","TileLayer","Marker","Circle","CircleMarker","axios","React","useState","useEffect","ResourceModal","loadJSON","callback","xobj","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","EXAMPLE","require","console","log","Map","base","setBase","county","setCounty","state","setState","setOpen","element","setElement","get","then","res","data","image","onClick","handleOpen","handleClose","backgroundColor","height","width","lat","lng","map","index","positions","click"],"mappings":"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","sourcesContent":["import {\n    MapContainer,\n    TileLayer,\n    Marker, \n    Circle,\n    CircleMarker\n  } from 'react-leaflet'\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react';\nimport ResourceModal from \"./Modal\"\n\nfunction loadJSON(callback) {   \n    var xobj = new XMLHttpRequest();\n    xobj.overrideMimeType(\"application/json\");\n    xobj.open('GET', '../news_data.json', true);\n    xobj.onreadystatechange = function () {\n      if (xobj.readyState == 4 && xobj.status == \"200\") {\n        callback(JSON.parse(xobj.responseText));\n      }\n    };\n    xobj.send(null);  \n  }\n\nconst EXAMPLE = require(\"./resource.json\")\nconsole.log(EXAMPLE)\n\n\nexport default function Map() {\n    const [base, setBase] = useState(null);\n    const [county, setCounty] = useState(null);\n    const [state, setState] = useState(null);\n    const [open, setOpen] = useState(false)\n    const [element, setElement] = useState(null)\n \n    useEffect(() => {\n        axios.get(\"http://localhost:5000/map\").then((res) => {\n            setBase(res.data.image);\n            setCounty(res.data.county);\n            setState(res.data.state);\n         })\n\n      }, []);\n\n    var onClick = (element) => {\n        setElement(element)\n        handleOpen()\n        console.log(open)\n    }\n    var handleOpen = () => {setOpen(true)}\n    var handleClose = () => {setOpen(false)}\n\n    return (\n        <React.Fragment>\n        <MapContainer style={{backgroundColor: \"black\",height: \"100vh\", width: \"100vw\"}} center={{lat: 35.938, lng:-79.81}} zoom={10}>\n            {base ?\n             <TileLayer\n                url={base}\n            /> : null}\n            {county ?\n             <TileLayer\n                url={county}\n            /> : null}\n            {state ?\n             <TileLayer\n                url={state} d\n            /> : null}\n        \n        {EXAMPLE.map((element, index) => {\n            \n            \n            (\n        <CircleMarker key={index} radius={5} color=\"purple\" center={element.positions} eventHandlers= {{click: () => onClick(element)}}/>\n        )})}      \n        </MapContainer>\n        {element ?\n        <ResourceModal element = {element} open= {open} handleClose={handleClose}></ResourceModal> :\n        null}\n        </React.Fragment>\n    )\n}"]},"metadata":{},"sourceType":"module"}